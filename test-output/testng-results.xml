<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="3" failed="2" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-26T01:07:28 IST" name="Suite" finished-at="2025-04-26T01:08:31 IST" duration-ms="63761">
    <groups>
      <group name="regression">
        <method signature="TC_Login.accountLogin()[pri:0, instance:testCases.TC_Login@40238dd0]" name="accountLogin" class="testCases.TC_Login"/>
        <method signature="TC_Login.accountLogin()[pri:0, instance:testCases.TC_Login@7e3181aa]" name="accountLogin" class="testCases.TC_Login"/>
        <method signature="TC_Login.accountLogin()[pri:0, instance:testCases.TC_Login@331acdad]" name="accountLogin" class="testCases.TC_Login"/>
      </group> <!-- regression -->
      <group name="sanity">
        <method signature="TC_Registration.accountRegistration()[pri:0, instance:testCases.TC_Registration@460ebd80]" name="accountRegistration" class="testCases.TC_Registration"/>
        <method signature="TC_Registration.accountRegistration()[pri:0, instance:testCases.TC_Registration@2250b9f2]" name="accountRegistration" class="testCases.TC_Registration"/>
        <method signature="TC_Registration.accountRegistration()[pri:0, instance:testCases.TC_Registration@142269f2]" name="accountRegistration" class="testCases.TC_Registration"/>
      </group> <!-- sanity -->
      <group name="master">
        <method signature="TC_Login.accountLogin()[pri:0, instance:testCases.TC_Login@40238dd0]" name="accountLogin" class="testCases.TC_Login"/>
        <method signature="TC_Registration.accountRegistration()[pri:0, instance:testCases.TC_Registration@460ebd80]" name="accountRegistration" class="testCases.TC_Registration"/>
        <method signature="TC_Login.accountLogin()[pri:0, instance:testCases.TC_Login@7e3181aa]" name="accountLogin" class="testCases.TC_Login"/>
        <method signature="TC_Registration.accountRegistration()[pri:0, instance:testCases.TC_Registration@2250b9f2]" name="accountRegistration" class="testCases.TC_Registration"/>
        <method signature="TC_Login.accountLogin()[pri:0, instance:testCases.TC_Login@331acdad]" name="accountLogin" class="testCases.TC_Login"/>
        <method signature="TC_Registration.accountRegistration()[pri:0, instance:testCases.TC_Registration@142269f2]" name="accountRegistration" class="testCases.TC_Registration"/>
      </group> <!-- master -->
    </groups>
    <test started-at="2025-04-26T01:07:28 IST" name="Test" finished-at="2025-04-26T01:07:47 IST" duration-ms="19410">
      <class name="testCases.TC_Registration">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_Registration@460ebd80]" started-at="2025-04-26T01:07:28 IST" name="setUp" finished-at="2025-04-26T01:07:31 IST" duration-ms="2978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="accountRegistration()[pri:0, instance:testCases.TC_Registration@460ebd80]" started-at="2025-04-26T01:07:31 IST" name="accountRegistration" finished-at="2025-04-26T01:07:33 IST" duration-ms="1840" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testCases.TC_Registration.accountRegistration(TC_Registration.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountRegistration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_Registration@460ebd80]" started-at="2025-04-26T01:07:33 IST" name="tearDown" finished-at="2025-04-26T01:07:38 IST" duration-ms="5440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_Registration -->
      <class name="testCases.TC_Login">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_Login@40238dd0]" started-at="2025-04-26T01:07:38 IST" name="setUp" finished-at="2025-04-26T01:07:40 IST" duration-ms="2176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="accountLogin()[pri:0, instance:testCases.TC_Login@40238dd0]" started-at="2025-04-26T01:07:40 IST" name="accountLogin" finished-at="2025-04-26T01:07:42 IST" duration-ms="1206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_Login@40238dd0]" started-at="2025-04-26T01:07:42 IST" name="tearDown" finished-at="2025-04-26T01:07:47 IST" duration-ms="5396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_Login -->
    </test> <!-- Test -->
    <test started-at="2025-04-26T01:07:48 IST" name="Test1" finished-at="2025-04-26T01:08:13 IST" duration-ms="25596">
      <class name="testCases.TC_Registration">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_Registration@2250b9f2]" started-at="2025-04-26T01:07:48 IST" name="setUp" finished-at="2025-04-26T01:07:54 IST" duration-ms="6067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="accountRegistration()[pri:0, instance:testCases.TC_Registration@2250b9f2]" started-at="2025-04-26T01:07:54 IST" name="accountRegistration" finished-at="2025-04-26T01:07:56 IST" duration-ms="2531" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testCases.TC_Registration.accountRegistration(TC_Registration.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountRegistration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_Registration@2250b9f2]" started-at="2025-04-26T01:07:57 IST" name="tearDown" finished-at="2025-04-26T01:08:03 IST" duration-ms="6574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_Registration -->
      <class name="testCases.TC_Login">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_Login@7e3181aa]" started-at="2025-04-26T01:08:03 IST" name="setUp" finished-at="2025-04-26T01:08:06 IST" duration-ms="2620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="accountLogin()[pri:0, instance:testCases.TC_Login@7e3181aa]" started-at="2025-04-26T01:08:06 IST" name="accountLogin" finished-at="2025-04-26T01:08:07 IST" duration-ms="1160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_Login@7e3181aa]" started-at="2025-04-26T01:08:07 IST" name="tearDown" finished-at="2025-04-26T01:08:13 IST" duration-ms="6502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_Login -->
    </test> <!-- Test1 -->
    <test started-at="2025-04-26T01:08:14 IST" name="Test2" finished-at="2025-04-26T01:08:31 IST" duration-ms="17666">
      <class name="testCases.TC_Registration">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_Registration@142269f2]" started-at="2025-04-26T01:08:14 IST" name="setUp" finished-at="2025-04-26T01:08:15 IST" duration-ms="1665" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 500. Message: Process unexpectedly closed with status 0 
Host info: host: 'BRAHMASANISPC', ip: '192.168.8.1'
Build info: version: '4.31.0', revision: '1ef9f18787*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:firefoxOptions: {binary: C:\Program Files\Mozilla Fi..., prefs: {remote.active-protocols: 3}}}]}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Process unexpectedly closed with status 0 
Host info: host: 'BRAHMASANISPC', ip: '192.168.8.1'
Build info: version: '4.31.0', revision: '1ef9f18787*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:firefoxOptions: {binary: C:\Program Files\Mozilla Fi..., prefs: {remote.active-protocols: 3}}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:142)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:137)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:119)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:114)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:99)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:89)
at testBase.BaseTestClass.setUp(BaseTestClass.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="accountRegistration()[pri:0, instance:testCases.TC_Registration@142269f2]" started-at="2025-04-26T01:08:15 IST" name="accountRegistration" finished-at="2025-04-26T01:08:15 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 500. Message: Process unexpectedly closed with status 0 
Host info: host: 'BRAHMASANISPC', ip: '192.168.8.1'
Build info: version: '4.31.0', revision: '1ef9f18787*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:firefoxOptions: {binary: C:\Program Files\Mozilla Fi..., prefs: {remote.active-protocols: 3}}}]}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Process unexpectedly closed with status 0 
Host info: host: 'BRAHMASANISPC', ip: '192.168.8.1'
Build info: version: '4.31.0', revision: '1ef9f18787*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:firefoxOptions: {binary: C:\Program Files\Mozilla Fi..., prefs: {remote.active-protocols: 3}}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:142)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:137)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:119)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:114)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:99)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:89)
at testBase.BaseTestClass.setUp(BaseTestClass.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountRegistration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_Registration@142269f2]" started-at="2025-04-26T01:08:15 IST" name="tearDown" finished-at="2025-04-26T01:08:15 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_Registration -->
      <class name="testCases.TC_Login">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_Login@331acdad]" started-at="2025-04-26T01:08:15 IST" name="setUp" finished-at="2025-04-26T01:08:24 IST" duration-ms="8290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="accountLogin()[pri:0, instance:testCases.TC_Login@331acdad]" started-at="2025-04-26T01:08:24 IST" name="accountLogin" finished-at="2025-04-26T01:08:25 IST" duration-ms="1508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_Login@331acdad]" started-at="2025-04-26T01:08:25 IST" name="tearDown" finished-at="2025-04-26T01:08:31 IST" duration-ms="6178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_Login -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
